package JavaBaseClassLibrary;

import java.math.BigDecimal;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

public class RandomTest {
	
	public static void main(String[] args)
	{
		Random rand = new Random();
		System.out.println(rand.nextInt());
		Random ranf = new Random();
		System.out.println(ranf.nextInt());
		
		Random rr1 = new Random(100);//指定种子为100
		Random rr2 = new Random(100);//指定种子为100
		System.out.println(rr1.nextDouble());
		System.out.println(rr2.nextDouble());//这两行输出的结果相同
		System.out.println(rr1.nextGaussian());
		System.out.println(rr2.nextGaussian());//生成伪高斯数(种子相同，结果相同)
		//为了防止
		
		ThreadLocalRandom randd = ThreadLocalRandom.current();//线程安全性
		System.out.println(randd.nextInt(1,100));//1-100之间的随机数
		System.out.println("-----------------------------------");
		
		//为了能精确表示、计算浮点数，java提供了BigDecimal类
		System.out.println("0.05 + 0.001 = " + (0.05+0.001));//发生精度丢失
		BigDecimal bd = BigDecimal.valueOf(3.1415926);//用BigDecimal的静态方法创建BigDecimal对象
		double dou = 3.14159265354979;
		BigDecimal be = BigDecimal.valueOf(dou);//用BigDecimal的静态方法创建BigDecimal对象
		System.out.println(bd);
		System.out.println(be);
		BigDecimal f1 = new BigDecimal("6.141599999");
		System.out.println(f1.add(bd));//+-*/
		System.out.println(f1.subtract(bd));
		System.out.println(f1.multiply(bd));
		System.out.println(f1.multiply(bd).doubleValue());//将BigDecimal类型转换为double类型
		System.out.println(f1.divide(f1));//除, 必须能除尽 否者会抛出ArithmeticException异常
		//注意：要避免使用double类型作为BigDecimal类的参数
		BigDecimal double_bd = new BigDecimal(3.14);
		System.out.println(double_bd.add(double_bd));//精确度还是无法得到保证
		
		double ans = f1.multiply(bd).doubleValue();//将BigDecimal类型转换为double类型
		System.out.println(ans);
	}
}
